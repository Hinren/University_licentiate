@model SignLanguage.EF.Paging.PagingResult<SignLanguage.EF.GoodMeaningWords>
@using SignLanguage.Website.HtmlHelpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

<div class="row">

    @for (int i = 0; i < Model.Results.Count; i++)
    {
        <div class="col-lg-6" style="margin-top: 5px;">
            <button id="@i" class="form-control" style=" background-color: #FFA500;"><p>@Model.Results[i].Meaning</p></button>

            <div class="views-row views-row-@i views-row-odd" style="display: none">
                @Html.DisplayImageOrVideoFor(Model.Results[i].Url, i)
            </div>
        </div>
    }
</div>



<br />
<br />

<div class="row">
    <div class="col-md-12 col-sm-12">
        @if (Model.PageCount > 1)
        {
            <ul class="pagination pull-right">
                <li><a href="@urlTemplate.Replace("{0}", "1")">&laquo;</a></li>
                @for (var i = startIndex; i <= finishIndex; i++)
                {
                    @if (i == Model.CurrentPage)
                    {
                        <li><a class="isDisabled" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
                    }
                    else
                    {

                        <li><a href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
                    }
                }
                <li><a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">&raquo;</a></li>
            </ul>}
    </div>
</div>


